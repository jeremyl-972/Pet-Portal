{"version":3,"file":"static/js/469.4af5746b.chunk.js","mappings":"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","sources":["pages/MyProfilepage/Profile.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\n\r\nimport './Profile.css';\r\nimport { AuthContext } from \"../../shared/contexts/auth-context\";\r\nimport useFormReducer from \"../../shared/Hooks/formReducer\";\r\nimport { Btn, Center, Input, Modal } from \"../../shared/UIKit\";\r\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/Utils/validators\";\r\nimport { useHttpClient } from \"../../shared/Hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/UIKit/Elements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/UIKit/Elements/LoadingSpinner/LoadingSpinner\";\r\n\r\nconst Profile = () => {\r\n    const auth = useContext(AuthContext);\r\n    const { User, token } = auth;\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    // input state setup\r\n    const [formState, inputHandler, setFormData] = useFormReducer({\r\n        firstName: {\r\n            value: User.firstName,\r\n            isValid: true\r\n        },\r\n        lastName: {\r\n            value: User.lastName,\r\n            isValid: true\r\n        },\r\n        phone: {\r\n            value: User.phone,\r\n            isValid: true\r\n        },\r\n        email: {\r\n            value: User.email,\r\n            isValid: true\r\n        },\r\n        password: {\r\n            value: User.password,\r\n            isValid: true\r\n        },\r\n        bio: {\r\n            value: User.bio,\r\n            isValid: true\r\n        }\r\n    }, true);\r\n\r\n    useEffect(() => {\r\n        if (User) {\r\n            setFormData({\r\n                firstName: {\r\n                    value: User.firstName,\r\n                    isValid: true\r\n                },\r\n                lastName: {\r\n                    value: User.lastName,\r\n                    isValid: true\r\n                },\r\n                phone: {\r\n                    value: User.phone,\r\n                    isValid: true\r\n                },\r\n                email: {\r\n                    value: User.email,\r\n                    isValid: true\r\n                },\r\n                password: {\r\n                    value: User.password,\r\n                    isValid: true\r\n                },\r\n                bio: {\r\n                    value: User.bio,\r\n                    isValid: true\r\n                },\r\n            }, true);\r\n        };\r\n    }, [setFormData, User]);\r\n\r\n    //save actions\r\n    const [showSaveModal, setShowSaveModal] = useState(false);\r\n\r\n    const saveHandler = async (event) => {\r\n        event.preventDefault();\r\n        //console.log(formState.inputs);//send this to the backend- PUT users/:userId\r\n        await sendRequest(\r\n            `${process.env.REACT_APP_BACKEND_URL}/users/${User._id}`,\r\n            'PUT',\r\n            JSON.stringify({\r\n                firstName: formState.inputs.firstName.value,\r\n                lastName: formState.inputs.lastName.value,\r\n                phone: formState.inputs.phone.value,\r\n                email: formState.inputs.email.value,\r\n                password: formState.inputs.password.value,\r\n                bio: formState.inputs.bio.value\r\n            }),\r\n            {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        );\r\n        setShowSaveModal(true);\r\n        setTimeout(() => {\r\n            setShowSaveModal(false);\r\n        }, 2000);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay={true} />}\r\n\r\n            <Center className='profile-settings-title'><h4>Edit Profile Settings</h4></Center>\r\n            <div className='profile-settings-container'>\r\n                <Input label={<span>First Name:</span>} id='firstName' onInput={inputHandler} element='input' type='text' initialvalue={formState.inputs.firstName.value} initialvalid={formState.inputs.firstName.isValid} validators={[VALIDATOR_REQUIRE()]} errorText='First Name required' />\r\n\r\n                <Input label={<span>Last Name:</span>} id='lastName' onInput={inputHandler} element='input' type='text' initialvalue={formState.inputs.lastName.value} initialvalid={formState.inputs.lastName.isValid} validators={[VALIDATOR_REQUIRE()]} errorText='Last Name required' />\r\n\r\n                <Input label={<span>Phone Number:</span>} id='phone' onInput={inputHandler} element='input' type='text' initialvalue={formState.inputs.phone.value} initialvalid={formState.inputs.phone.isValid} validators={[VALIDATOR_REQUIRE()]} errorText='Enter valid phone number' />\r\n\r\n                <Input label={<span>Email:</span>} id='email' onInput={inputHandler} element='input' type='email' initialvalue={formState.inputs.email.value} initialvalid={formState.inputs.email.isValid} validators={[VALIDATOR_EMAIL()]} errorText='Enter valid email' />\r\n\r\n                <Input label={<span>Password:</span>} id='password' onInput={inputHandler} element='input' type='password' initialvalue={formState.inputs.password.value} initialvalid={formState.inputs.password.isValid} validators={[VALIDATOR_MINLENGTH(6)]} errorText='Password needs 6 characters min' />\r\n\r\n                <Input label={<span>Bio:</span>} id='bio' onInput={inputHandler} type='text' initialvalue={formState.inputs.bio.value} initialvalid={formState.inputs.bio.isValid} validators={[VALIDATOR_REQUIRE()]} errorText='Bio required' />\r\n\r\n                <Center>\r\n                    <Btn disabled={!formState.isValid} onClick={saveHandler}>Submit Changes</Btn>\r\n                </Center>\r\n            </div>\r\n\r\n            <Modal show={showSaveModal} onCancel={() => { setShowSaveModal(false) }} headerClass='pet-page-modal-header' headerText='Your profile details have been saved.'></Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Profile;"],"names":["auth","useContext","AuthContext","User","token","useHttpClient","isLoading","error","sendRequest","clearError","useFormReducer","firstName","value","isValid","lastName","phone","email","password","bio","formState","inputHandler","setFormData","useEffect","useState","showSaveModal","setShowSaveModal","saveHandler","event","preventDefault","process","_id","JSON","stringify","inputs","setTimeout","ErrorModal","onClear","LoadingSpinner","asOverlay","className","label","id","onInput","element","type","initialvalue","initialvalid","validators","VALIDATOR_REQUIRE","errorText","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","disabled","onClick","show","onCancel","headerClass","headerText"],"sourceRoot":""}