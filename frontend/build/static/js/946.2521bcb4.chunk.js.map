{"version":3,"file":"static/js/946.2521bcb4.chunk.js","mappings":"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","sources":["pages/Adminpages/Views/AddPet.js","shared/UIKit/Elements/ImageUpload/ImageUpload.js"],"sourcesContent":["import { useContext, useState } from 'react';\r\n\r\nimport './Add_EditPet.css'\r\nimport useFormReducer from '../../../shared/Hooks/formReducer';\r\nimport { Center, Btn, Input, Modal } from '../../../shared/UIKit';\r\nimport { VALIDATOR_REQUIRE } from '../../../shared/Utils/validators';\r\nimport { useHttpClient } from '../../../shared/Hooks/http-hook';\r\nimport ErrorModal from '../../../shared/UIKit/Elements/ErrorModal';\r\nimport LoadingSpinner from '../../../shared/UIKit/Elements/LoadingSpinner/LoadingSpinner';\r\nimport ImageUpload from '../../../shared/UIKit/Elements/ImageUpload/ImageUpload';\r\nimport { AuthContext } from '../../../shared/contexts/auth-context';\r\n\r\nconst AddPet = () => {\r\n    const auth = useContext(AuthContext);\r\n    const { token } = auth;\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const [formState, inputHandler] = useFormReducer({\r\n        name: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        type: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        breed: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        status: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        height: {\r\n            value: 0,\r\n            isValid: false\r\n        },\r\n        weight: {\r\n            value: 0,\r\n            isValid: false\r\n        },\r\n        color: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        hypoall: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        dietno: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        bio: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        image: {\r\n            value: null,\r\n            isValid: false\r\n        }\r\n    }, false);\r\n\r\n    const [showAddedModal, setShowAddedModal] = useState(false);\r\n\r\n    const addSubmitHandler = async (event) => {\r\n        event.preventDefault();\r\n        //console.log(formState.inputs);//send this to the backend\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('name', formState.inputs.name.value);\r\n            formData.append('type', formState.inputs.type.value);\r\n            formData.append('breed', formState.inputs.breed.value);\r\n            formData.append('status', formState.inputs.status.value);\r\n            formData.append('height', formState.inputs.height.value);\r\n            formData.append('weight', formState.inputs.weight.value);\r\n            formData.append('color', formState.inputs.color.value);\r\n            formData.append('hypoall', formState.inputs.hypoall.value);\r\n            formData.append('dietno', formState.inputs.dietno.value);\r\n            formData.append('bio', formState.inputs.bio.value);\r\n            formData.append('image', formState.inputs.image.value);\r\n\r\n            await sendRequest(\r\n               `${process.env.REACT_APP_BACKEND_URL}/pets`,\r\n                'POST',\r\n                formData,\r\n                { Authorization: `Bearer ${token}` }\r\n            );\r\n\r\n            setShowAddedModal(true);\r\n            setTimeout(() => {\r\n                setShowAddedModal(false);\r\n            }, 2000);\r\n        } catch (error) { };\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ErrorModal nobackdrop={true} error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay={true} />}\r\n\r\n            <Center className='add-edit-title'>Add Pet</Center>\r\n            <div>\r\n                <div className=\"admin-about-pet-container\">\r\n                    <ImageUpload center='center' id='image' onInput={inputHandler} errorText='Please add an image' />\r\n\r\n                    <Input label={<span>Pet Name:</span>} id='name' onInput={inputHandler} element='input' type='text' initialvalue={formState.inputs.name.value} initialvalid={formState.inputs.name.isValid} validators={[VALIDATOR_REQUIRE()]} errorText='Pet Name Required' />\r\n\r\n                    <Input label={<span>Type of Pet:</span>} id='type' onInput={inputHandler} element='input' type='text' initialvalue={formState.inputs.type.value} initialvalid={formState.inputs.type.isValid} validators={[VALIDATOR_REQUIRE()]} errorText='Pet Type Required' />\r\n\r\n                    <Input label={<span>Breed:</span>} id='breed' onInput={inputHandler} element='input' type='text' initialvalue={formState.inputs.breed.value} initialvalid={formState.inputs.breed.isValid} validators={[VALIDATOR_REQUIRE()]} errorText='Breed Required' />\r\n\r\n                    <Input label={<span>Current Status:</span>} id='status' onInput={inputHandler} element='input' type='text' initialvalue={formState.inputs.status.value} initialvalid={formState.inputs.status.isValid} validators={[VALIDATOR_REQUIRE()]} errorText='Status Required' />\r\n\r\n                    <Input label={<span>Height:</span>} id='height' onInput={inputHandler} element='input' type='text' initialvalue={formState.inputs.height.value} initialvalid={formState.inputs.height.isValid} validators={[VALIDATOR_REQUIRE()]} errorText='Height Required' />\r\n\r\n                    <Input label={<span>Weight:</span>} id='weight' onInput={inputHandler} element='input' type='text' initialvalue={formState.inputs.weight.value} initialvalid={formState.inputs.weight.isValid} validators={[VALIDATOR_REQUIRE()]} errorText='Weight Required' />\r\n\r\n                    <Input label={<span>Color:</span>} id='color' onInput={inputHandler} element='input' type='text' initialvalue={formState.inputs.color.value} initialvalid={formState.inputs.color.isValid} validators={[VALIDATOR_REQUIRE()]} errorText='Color Required' />\r\n\r\n                    <Input label={<span>Hypoallergenic:</span>} id='hypoall' onInput={inputHandler} element='input' type='text' initialvalue={formState.inputs.hypoall.value} initialvalid={formState.inputs.hypoall.isValid} validators={[VALIDATOR_REQUIRE()]} errorText='HypoAll Required' />\r\n\r\n                    <Input label={<span>Dietary Restrictions:</span>} id='dietno' onInput={inputHandler} element='input' type='text' initialvalue={formState.inputs.dietno.value} initialvalid={formState.inputs.dietno.isValid} validators={[VALIDATOR_REQUIRE()]} errorText='Diet Nos Required' />\r\n\r\n                    <Input label={<span>Bio:</span>} id='bio' onInput={inputHandler} element='input' type='textarea' initialvalue={formState.inputs.bio.value} initialvalid={formState.inputs.bio.isValid} validators={[VALIDATOR_REQUIRE()]} errorText='Bio Required' />\r\n\r\n                    <Center>\r\n                        <Btn disabled={!formState.isValid} onClick={addSubmitHandler}>Add Pet</Btn>\r\n                    </Center>\r\n                </div>\r\n            </div>\r\n\r\n            <Modal show={showAddedModal} onCancel={() => { setShowAddedModal(false) }} headerClass='pet-page-modal-header'\r\n                headerText={`${formState.inputs.name.value} has been added to the Pets Database`}\r\n            >\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddPet;\r\n","import { useEffect, useRef, useState } from 'react';\r\n\r\nimport './ImageUpload.css'\r\nimport { Btn } from '../Btn/Btn';\r\n\r\nconst ImageUpload = (props) => {\r\n    const [file, setFile] = useState();\r\n    const [previewUrl, setPreviewUrl] = useState();\r\n    const [isValid, setIsValid] = useState(false);\r\n\r\n    const filePickerRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if(props.initialvalue){\r\n            setPreviewUrl(props.initialvalue);\r\n        };\r\n        if (!file) {\r\n            return;\r\n        };\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = () => {\r\n            setPreviewUrl(fileReader.result);\r\n        }\r\n        fileReader.readAsDataURL(file);\r\n    }, [file, props.initialvalue])\r\n\r\n\r\n    const pickedHandler = (event) => {\r\n        let pickedFile;\r\n        let fileIsValid = isValid;\r\n        if (event.target.files && event.target.files.length === 1) {\r\n            pickedFile = event.target.files[0];\r\n            setFile(pickedFile);\r\n            setIsValid(true);\r\n            fileIsValid = true;\r\n        } else {\r\n            setIsValid(false);\r\n            fileIsValid(false);\r\n        };\r\n        props.onInput(props.id, pickedFile, fileIsValid);\r\n    };\r\n\r\n    const pickImageHandler = () => {\r\n        filePickerRef.current.click();\r\n    };\r\n    return (\r\n        <div className=\"form-control\">\r\n            <input id={props.id} ref={filePickerRef} onChange={pickedHandler} style={{ display: 'none' }} type=\"file\" accept='.jpg, .png, .jpeg' />\r\n            <div className={`image-upload ${props.center && 'center'}`}>\r\n                <div className=\"image-upload__preview\">\r\n                    {previewUrl ? <img src={previewUrl} alt=\"Preview\" /> : <p>Please pick an Image</p>}\r\n                </div>\r\n                <Btn type='button' onClick={pickImageHandler}>Pick Image</Btn>\r\n            </div>\r\n            {!isValid && <p>{props.errorText}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageUpload;"],"names":["token","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useFormReducer","name","value","isValid","type","breed","status","height","weight","color","hypoall","dietno","bio","image","formState","inputHandler","useState","showAddedModal","setShowAddedModal","addSubmitHandler","event","preventDefault","formData","FormData","append","inputs","process","Authorization","setTimeout","nobackdrop","onClear","asOverlay","className","center","id","onInput","errorText","label","element","initialvalue","initialvalid","validators","VALIDATOR_REQUIRE","disabled","onClick","show","onCancel","headerClass","headerText","props","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","onChange","pickedFile","fileIsValid","target","files","length","style","display","accept","src","alt","Btn","current","click"],"sourceRoot":""}