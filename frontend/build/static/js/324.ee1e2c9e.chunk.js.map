{"version":3,"file":"static/js/324.ee1e2c9e.chunk.js","mappings":"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","sources":["pages/Searchpage/Components/PetSimple.jsx","pages/Searchpage/Components/AllPets.jsx","pages/Searchpage/Views/Search.js"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\r\nimport './PetSimple.css'\r\n\r\nconst PetSimple = ({ id, name, image, status }) => {\r\n    return (\r\n        <NavLink to={`/pet/${id}`} className=\"pet-card\" style={{ backgroundImage: `url('${image}')` }}>\r\n            <div className=\"pet-card-container\">\r\n                <div className=\"pet-card-header\">\r\n                    <span className=\"pet-card-title\">{name}</span>\r\n                    <span className=\"pet-card-status\">{`  (${status})`}</span>\r\n                </div>\r\n            </div>\r\n        </NavLink>\r\n    );\r\n};\r\n\r\nexport default PetSimple;","import { useEffect, useState } from 'react';\r\n\r\nimport { Center, ImageContainer } from \"../../../shared/UIKit\";\r\nimport PetSimple from \"./PetSimple\";\r\nimport ErrorModal from '../../../shared/UIKit/Elements/ErrorModal';\r\nimport LoadingSpinner from '../../../shared/UIKit/Elements/LoadingSpinner/LoadingSpinner';\r\nimport { useHttpClient } from '../../../shared/Hooks/http-hook.js';\r\n\r\nconst AllPets = () => {\r\n    const [loadedPets, setLoadedPets] = useState([]);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    useEffect(() => {\r\n        const allPetsRequest = async () => {\r\n            const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/pets`,\r\n                'GET'\r\n            );\r\n            setLoadedPets(responseData.pets.filter(pet => pet.status !== 'Adopted'));\r\n        };\r\n        allPetsRequest();\r\n    }, [sendRequest]);\r\n\r\n    return (\r\n        <>\r\n            <ErrorModal nobackdrop={false} error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay={true} />}\r\n\r\n            {!isLoading && loadedPets &&\r\n                <ImageContainer>\r\n                    {loadedPets.map((pet) => (\r\n                        <PetSimple key={pet._id} id={pet._id} name={pet.name} image={`${pet.image}`} breed={pet.breed} status={pet.status} />\r\n                    ))}\r\n                </ImageContainer>\r\n            }\r\n            {(!loadedPets || loadedPets.length === 0) && !isLoading && <Center>All pets are adopted at this time.</Center>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllPets;","import { useState } from \"react\";\r\n\r\nimport \"./Search.css\";\r\nimport {\r\n  Line,\r\n  Inner,\r\n  Icon,\r\n  Btn,\r\n  Center,\r\n  ImageContainer,\r\n} from \"../../../shared/UIKit\";\r\nimport AllPets from \"../Components/AllPets\";\r\nimport Dropdown from \"../../../shared/UIKit/Elements/Dropdown/Dropdown\";\r\nimport ErrorModal from \"../../../shared/UIKit/Elements/ErrorModal\";\r\nimport LoadingSpinner from \"../../../shared/UIKit/Elements/LoadingSpinner/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../../shared/Hooks/http-hook\";\r\nimport PetSimple from \"../Components/PetSimple\";\r\n\r\nconst typeList = [\r\n  { id: \"1\", value: \"Dog\" },\r\n  { id: \"2\", value: \"Cat\" },\r\n  { id: \"3\", value: \"Bird\" },\r\n  { id: \"4\", value: \"Reptile\" },\r\n  { id: \"5\", value: \"Arachnid\" },\r\n];\r\nconst statusList = [\r\n  { id: \"1\", value: \"Available\" },\r\n  { id: \"2\", value: \"Fostered\" },\r\n  { id: \"3\", value: \"Adopted\" },\r\n];\r\nconst heightList = [\r\n  { id: \"1\", value: 25 },\r\n  { id: \"2\", value: 50 },\r\n  { id: \"3\", value: 75 },\r\n  { id: \"4\", value: 100 },\r\n  { id: \"6\", value: 125 },\r\n  { id: \"7\", value: 150 },\r\n];\r\nconst weightList = [\r\n  { id: \"1\", value: 2 },\r\n  { id: \"2\", value: 5 },\r\n  { id: \"3\", value: 12 },\r\n  { id: \"4\", value: 25 },\r\n  { id: \"6\", value: 40 },\r\n  { id: \"7\", value: 90 },\r\n];\r\n\r\nconst Search = () => {\r\n  const [typeSelectedItem, setTypeSelectedItem] = useState(\"\");\r\n  const [statusSelectedItem, setStatusSelectedItem] = useState(\"\");\r\n  const [heightSelectedItem, setHeightSelectedItem] = useState(\"\");\r\n  const [weightSelectedItem, setWeightSelectedItem] = useState(\"\");\r\n  const [nameValue, setNameValue] = useState(\"\");\r\n\r\n  const [queryResult, setQueryResult] = useState(null);\r\n  const [justClosed, setJustClosed] = useState(false);\r\n  const [justClicked, setjustClicked] = useState(false);\r\n\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const handleNameInput = (e) => {\r\n    setNameValue(e.target.value);\r\n  };\r\n\r\n  const [showAdvSearch, setShowAdvSearch] = useState(false);\r\n  const openAdvSearch = () => {\r\n    setShowAdvSearch(true);\r\n  };\r\n  const closeAdvSearch = () => {\r\n    setShowAdvSearch(false);\r\n    setStatusSelectedItem(\"\");\r\n    setHeightSelectedItem(\"\");\r\n    setWeightSelectedItem(\"\");\r\n    setNameValue(\"\");\r\n    if (!typeSelectedItem) {\r\n      setQueryResult(null);\r\n    }\r\n    if (typeSelectedItem) {\r\n      setJustClosed(true);\r\n    }\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    if (!typeSelectedItem) {\r\n      setjustClicked(true);\r\n    }\r\n    setJustClosed(false);\r\n\r\n    if (typeSelectedItem) {\r\n      setjustClicked(false);\r\n      const responseData = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/pets/search?type=${typeSelectedItem.value}&name=${nameValue}&status=${statusSelectedItem.value}&height=${heightSelectedItem.value}&weight=${weightSelectedItem.value}`,\r\n        \"GET\"\r\n      );\r\n      setQueryResult(responseData.petsArray);\r\n    }\r\n  };\r\n\r\n  if (justClosed) {\r\n    handleClick();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal nobackdrop={false} error={error} onClear={clearError} />\r\n      {isLoading && <LoadingSpinner asOverlay={true} />}\r\n\r\n      <div style={{ padding: \"0 25px\" }}>\r\n        <Center>\r\n          <h1 style={{ padding: \"15px 0\" }}>Pet Search</h1>\r\n        </Center>\r\n        <Inner>\r\n          <Center className=\"search-page-intro\">\r\n            What type of pet is right for you?\r\n          </Center>\r\n\r\n          <Center className=\"outer-container\">\r\n            <Center className=\"container\">\r\n              <Line between className=\"line\">\r\n                <Dropdown\r\n                  selectedItem={typeSelectedItem}\r\n                  onSelect={setTypeSelectedItem}\r\n                  id=\"type\"\r\n                  width={{ width: \"90%\" }}\r\n                  text={\r\n                    justClicked\r\n                      ? \"You must select a type of pet\"\r\n                      : \"Select type of pet\"\r\n                  }\r\n                  list={typeList}\r\n                />\r\n                <Btn onClick={handleClick} className=\"pet-search-button\">\r\n                  <Icon className=\"\" i=\"magnifying-glass\" />\r\n                </Btn>\r\n              </Line>\r\n              {showAdvSearch && (\r\n                <>\r\n                  <Line between className=\"line\">\r\n                    <input\r\n                      onChange={handleNameInput}\r\n                      className=\"name-input\"\r\n                      placeholder=\"Enter name here\"\r\n                    />\r\n                    <Dropdown\r\n                      selectedItem={heightSelectedItem}\r\n                      onSelect={setHeightSelectedItem}\r\n                      id=\"height\"\r\n                      width={{ width: \"43%\" }}\r\n                      text={\"Max height (cm)\"}\r\n                      list={heightList}\r\n                    />\r\n                  </Line>\r\n                  <Line between className=\"line\">\r\n                    <Dropdown\r\n                      selectedItem={statusSelectedItem}\r\n                      onSelect={setStatusSelectedItem}\r\n                      id=\"status\"\r\n                      width={{ width: \"54%\" }}\r\n                      text={\"Select adoption status\"}\r\n                      list={statusList}\r\n                    />\r\n                    <Dropdown\r\n                      selectedItem={weightSelectedItem}\r\n                      onSelect={setWeightSelectedItem}\r\n                      id=\"weight\"\r\n                      width={{ width: \"43%\" }}\r\n                      text={\"Max weight (kg)\"}\r\n                      list={weightList}\r\n                    />\r\n                  </Line>\r\n                </>\r\n              )}\r\n            </Center>\r\n            {showAdvSearch ? (\r\n              <div className=\"adv-search-toggle\" onClick={closeAdvSearch}>\r\n                Close advanced search\r\n              </div>\r\n            ) : (\r\n              <div className=\"adv-search-toggle\" onClick={openAdvSearch}>\r\n                Open advanced search\r\n              </div>\r\n            )}\r\n          </Center>\r\n\r\n          {queryResult && !isLoading && (\r\n            <ImageContainer>\r\n              {queryResult.map((pet) => (\r\n                <PetSimple\r\n                  key={pet._id}\r\n                  id={pet._id}\r\n                  name={pet.name}\r\n                  image={`${pet.image}`}\r\n                  breed={pet.breed}\r\n                  status={pet.status}\r\n                />\r\n              ))}\r\n            </ImageContainer>\r\n          )}\r\n\r\n          {!queryResult && !isLoading && <AllPets />}\r\n          {queryResult && queryResult.length === 0 && !isLoading && (\r\n            <Center>No pets match this search inquiry.</Center>\r\n          )}\r\n        </Inner>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"],"names":["id","name","image","status","to","className","style","backgroundImage","useState","loadedPets","setLoadedPets","useHttpClient","isLoading","error","sendRequest","clearError","useEffect","allPetsRequest","process","responseData","pets","filter","pet","ErrorModal","nobackdrop","onClear","LoadingSpinner","asOverlay","map","PetSimple","_id","breed","length","typeList","value","statusList","heightList","weightList","typeSelectedItem","setTypeSelectedItem","statusSelectedItem","setStatusSelectedItem","heightSelectedItem","setHeightSelectedItem","weightSelectedItem","setWeightSelectedItem","nameValue","setNameValue","queryResult","setQueryResult","justClosed","setJustClosed","justClicked","setjustClicked","showAdvSearch","setShowAdvSearch","handleClick","petsArray","padding","between","Dropdown","selectedItem","onSelect","width","text","list","onClick","i","onChange","e","target","placeholder"],"sourceRoot":""}