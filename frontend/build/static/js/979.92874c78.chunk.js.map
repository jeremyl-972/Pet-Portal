{"version":3,"file":"static/js/979.92874c78.chunk.js","mappings":"oRAcA,EAViB,SAAC,GAAiC,IAA/BA,EAA8B,EAA9BA,GAAIC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAC/B,OACI,SAAC,KAAD,CAASC,GAAE,0BAAqBH,GAAMI,UAAU,YAAhD,UACI,gBAAKA,UAAU,sBAAf,UACI,iBAAMA,UAAU,kBAAhB,mBAAsCH,EAAtC,YAAmDC,U,UC8DnE,EA7DiB,WACb,IACQG,GADKC,EAAAA,EAAAA,YAAWC,EAAAA,GAChBF,MACR,GAAoCG,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAAsDC,EAAAA,EAAAA,KAA9CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,WAkBvC,OAfAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAe,mCAAG,sGACOH,EAAY,GAAD,OAC/BI,4CAD+B,UAElC,MACA,KACA,CAAE,cAAgB,UAAhB,OAA2Bf,KALb,OACdgB,EADc,OAOdC,EAAcD,EAAaE,MACjCb,EAAcY,EAAYE,QAAO,SAAAC,GAAC,MAAe,UAAXA,EAAEC,SACxCd,EAAcU,EAAYE,QAAO,SAAAC,GAAC,MAAe,UAAXA,EAAEC,SATpB,2CAAH,qDAWrBP,MACD,CAACH,EAAaX,KAGb,iCACI,SAACsB,EAAA,EAAD,CAAYC,YAAY,EAAOb,MAAOA,EAAOc,QAASZ,IACrDH,IAAa,SAACgB,EAAA,EAAD,CAAgBC,WAAW,KAEzC,iBAAKC,MAAO,CAAEC,QAAS,YAAvB,WACI,SAAC,KAAD,WAAQ,eAAID,MAAO,CAAEC,QAAS,UAAtB,+BACR,SAAC,KAAD,WAAQ,gBAAK7B,UAAU,oBAEtBK,IACG,SAAC,KAAD,UACKA,EAAWyB,KAAI,SAACC,GAAD,OACZ,SAAC,EAAD,CAAyBnC,GAAImC,EAAKC,IAAKnC,UAAWkC,EAAKlC,UAAWC,SAAUiC,EAAKjC,SAAUmC,MAAOF,EAAKE,MAAOC,MAAOH,EAAKG,MAAOC,IAAKJ,EAAKI,KAA5HJ,EAAKC,WAK9B3B,IAAc,SAAC,KAAD,mDAGpB,iBAAKuB,MAAO,CAAEC,QAAS,oBAAvB,WACI,SAAC,KAAD,WAAQ,eAAID,MAAO,CAAEC,QAAS,UAAtB,4BACR,SAAC,KAAD,WAAQ,gBAAK7B,UAAU,oBAEtBO,IACG,SAAC,KAAD,UACKA,EAAWuB,KAAI,SAACC,GAAD,OACZ,SAAC,EAAD,CAAyBnC,GAAImC,EAAKC,IAAKnC,UAAWkC,EAAKlC,UAAWC,SAAUiC,EAAKjC,SAAUmC,MAAOF,EAAKE,MAAOC,MAAOH,EAAKG,MAAOC,IAAKJ,EAAKI,KAA5HJ,EAAKC,YAK7BzB,GAAoC,IAAtBA,EAAW6B,UAAiB,SAAC,KAAD","sources":["pages/Adminpages/Components/UserCard.jsx","pages/Adminpages/Views/AllUsers.js"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\r\n\r\nimport './UserCard.css';\r\n\r\nconst UserCard = ({ id, firstName, lastName }) => {\r\n    return (\r\n        <NavLink to={`/admin/fullUser/${id}`} className=\"user-card\" >\r\n            <div className=\"user-card-container\">\r\n                <span className=\"user-card-title\">{`${firstName} ${lastName}`}</span>\r\n            </div>\r\n        </NavLink>\r\n    );\r\n};\r\n\r\nexport default UserCard;","import { useContext, useEffect, useState } from 'react';\r\n\r\nimport { Center, ImageContainer } from \"../../../shared/UIKit\";\r\nimport ErrorModal from '../../../shared/UIKit/Elements/ErrorModal';\r\nimport LoadingSpinner from '../../../shared/UIKit/Elements/LoadingSpinner/LoadingSpinner';\r\nimport { useHttpClient } from '../../../shared/Hooks/http-hook.js';\r\nimport UserCard from '../Components/UserCard';\r\nimport { AuthContext } from '../../../shared/contexts/auth-context';\r\n\r\nconst AllUsers = () => {\r\n    const auth = useContext(AuthContext);\r\n    const { token } = auth;\r\n    const [adminArray, setAdminArray] = useState([]);\r\n    const [basicArray, setBasicArray] = useState([]);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n\r\n    useEffect(() => {\r\n        const allUsersRequest = async () => {\r\n            const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/users`,\r\n                'GET',\r\n                null,\r\n                { 'Authorization': `Bearer ${token}` }\r\n            );\r\n            const loadedUsers = responseData.users;\r\n            setAdminArray(loadedUsers.filter(u => u.role === 'admin'));\r\n            setBasicArray(loadedUsers.filter(u => u.role !== 'admin'));\r\n        };\r\n        allUsersRequest();\r\n    }, [sendRequest, token]);\r\n\r\n    return (\r\n        <>\r\n            <ErrorModal nobackdrop={false} error={error} onClear={clearError} />\r\n            {isLoading && <LoadingSpinner asOverlay={true} />}\r\n\r\n            <div style={{ padding: '0px 25px' }}>\r\n                <Center><h2 style={{ padding: '15px 0' }}>Administrators</h2></Center>\r\n                <Center><div className='dividing-line'></div></Center>\r\n\r\n                {adminArray &&\r\n                    <ImageContainer>\r\n                        {adminArray.map((user) => (\r\n                            <UserCard key={user._id} id={user._id} firstName={user.firstName} lastName={user.lastName} email={user.email} phone={user.phone} bio={user.bio} />\r\n                        ))}\r\n                    </ImageContainer>\r\n                }\r\n\r\n                {!adminArray && <Center>There are no administrators yet.</Center>}\r\n            </div>\r\n\r\n            <div style={{ padding: '40px 25px 0 25px' }}>\r\n                <Center><h2 style={{ padding: '15px 0' }}>Basic Users</h2></Center>\r\n                <Center><div className='dividing-line'></div></Center>\r\n\r\n                {basicArray &&\r\n                    <ImageContainer>\r\n                        {basicArray.map((user) => (\r\n                            <UserCard key={user._id} id={user._id} firstName={user.firstName} lastName={user.lastName} email={user.email} phone={user.phone} bio={user.bio} />\r\n                        ))}\r\n                    </ImageContainer>\r\n                }\r\n\r\n                {(!basicArray || basicArray.length === 0) && <Center>There are no basic users yet.</Center>}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AllUsers;"],"names":["id","firstName","lastName","to","className","token","useContext","AuthContext","useState","adminArray","setAdminArray","basicArray","setBasicArray","useHttpClient","isLoading","error","sendRequest","clearError","useEffect","allUsersRequest","process","responseData","loadedUsers","users","filter","u","role","ErrorModal","nobackdrop","onClear","LoadingSpinner","asOverlay","style","padding","map","user","_id","email","phone","bio","length"],"sourceRoot":""}